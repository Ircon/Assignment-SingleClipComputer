C51 COMPILER V8.02   MAIN                                                                  01/24/2013 15:49:54 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Out\main.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\Source\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(..\Out\
                    -main.obj)

line level    source

   1          /************STC12C5A60S2单片机 PCF8591 AD DA转换实验**************
   2          
   3          程序功能：PCF8591模块测试
   4          
   5          开发环境：Keil3
   6          
   7          硬件环境：CEPARK多功能开发学习板/实验箱（2013版），STC12C5A60S2，11.0592M晶振
   8                                                                                                                                                                                                     
   9          接线说明：单片机P36接底板JP68.具体为：SCL――P37 ，SDA――P36
  10          
  11          跳线说明：J3
  12          
  13          实验现象：打开上位机软件。打开串口，串口号从设备管理器中查看。波特率设为115200. 
  14                            打开 AD 转换，打开DA 转换。
  15                          
  16                                  AD转换测试时
  17                          选择一个转换通道，调节可调电阻，上位机显示转换后的相应数值。 
  18                                  DA转换测试时 
  19                          调节滑动条，改变输入的数字量。模块上的LED 指示灯亮度相应改变。
  20          
  21          
  22                                                                                   
  23          论坛支持：http://bbs.cepark.com
  24          
  25          淘宝店铺：http://cepark.taobao.com
  26          
  27          作者：cepark 
  28          
  29          时间：2013-01-01（元旦快乐！）
  30          
  31          
  32          ******************************************************************/
  33          
  34          #include "STC12C5A.h"
  35          #include "PCF8591_STC12C5A.h"
  36          
  37          uint ii;
  38          ulong ad_result=0;
  39          uchar pcf8591_adchannel=0;
  40          
  41          uchar da_val=0;
  42          
  43          //*************** 函数定义 ******************
  44          void delay1ms(unsigned int j);
  45          
  46          void senddata_uart0(uchar dc);
  47          void sendstring_uart0(uchar *dd);
  48          void senduint_uart0(uint dd,uchar* dec_hex);
  49          
  50          
  51          //*************** 主程序 ********************
  52          void main(void)
  53          {
  54   1        //////////////将这段代码嵌入到程序中////////////////
C51 COMPILER V8.02   MAIN                                                                  01/24/2013 15:49:54 PAGE 2   

  55   1        if((PCON&0x10)==0)  //如果POF位=0
  56   1        {
  57   2          PCON=PCON|0x10;   //将POF位置1
  58   2          IAP_CONTR|=0x60;  //软复位,从ISP监控区启动
  59   2        }
  60   1        else
  61   1        {
  62   2          PCON=PCON&0xef;   //将POF位清零
  63   2        }
  64   1        ////////////////////////////////////////////////////
  65   1      
  66   1        SCON=0x50;         //uart0方式1,允许接收 
  67   1        AUXR=BRTR|S1BRS|BRTx12; //独立波特率发生器时钟为1T,uart0使用并启动独立波特率发生器
  68   1        BRT=0xfd;          //设置独立波特率发生器波特率  115200bps
  69   1        ES=1;              //uart0中断允许
  70   1        EA=1;              //中断总允许
  71   1      
  72   1        delay1ms(12000);
  73   1        sendstring_uart0("***          STC12C5A60S2         ***\r\n");
  74   1        sendstring_uart0("***     PCF8591 AD DA转换实验     ***\r\n");
  75   1        sendstring_uart0("***      2013年1月9日8:29:16      ***\r\n");
  76   1      
  77   1        for(ii=0;ii<256;ii++)
  78   1        {
  79   2          pcf8591_da_write(ii);
  80   2          delay1ms(60);
  81   2        }
  82   1      
  83   1        delay1ms(8000);
  84   1        for(ii=254;ii!=0;ii--)
  85   1        {
  86   2          pcf8591_da_write(ii);
  87   2          delay1ms(60);
  88   2        }
  89   1      
  90   1        while(1)
  91   1        {
  92   2          pcf8591_ad_write(0x40+pcf8591_adchannel);
  93   2          ad_result=pcf8591_ad_read();
  94   2      
  95   2          ad_result=(ad_result*5000)/256;
  96   2          sendstring_uart0("pcf8591_adchannel");
  97   2          senduint_uart0(pcf8591_adchannel,"1d");
  98   2          sendstring_uart0("=");
  99   2      
 100   2          senduint_uart0(ad_result/1000,"1d");
 101   2          sendstring_uart0(".");
 102   2          senduint_uart0(ad_result%1000,"3d");
 103   2          sendstring_uart0("V  ");
 104   2      
 105   2          pcf8591_da_write(da_val);
 106   2          sendstring_uart0("pcf8591_da=0x");
 107   2          senduint_uart0(da_val,"2h");
 108   2          sendstring_uart0("\r\n");
 109   2      
 110   2          delay1ms(3800);
 111   2        }
 112   1      }
 113          
 114          
 115          //uart interrupt
 116          void uart0(void) interrupt 4
C51 COMPILER V8.02   MAIN                                                                  01/24/2013 15:49:54 PAGE 3   

 117          {
 118   1        uchar tc[2];
 119   1      
 120   1        uint m=0;
 121   1        uint count=0;
 122   1      
 123   1        EA=0;
 124   1        if(RI)
 125   1        {
 126   2          while(count<10000)
 127   2          {
 128   3            if(RI)
 129   3            {
 130   4              RI=0;
 131   4              if(m<2)
 132   4              {
 133   5                tc[m]=SBUF;
 134   5              }
 135   4              m++;
 136   4              count=0;
 137   4            }
 138   3            else                //循环等待10000次,没有接收到数据退出while循环
 139   3            {
 140   4              count++;
 141   4            }
 142   3          }
 143   2        }
 144   1      
 145   1        if(1==m)
 146   1        {
 147   2          if(0xaa==tc[0])
 148   2          {
 149   3            IAP_CONTR=0x20;       //软复位,从用户程序区启动
 150   3          }
 151   2          else
 152   2          {
 153   3            senddata_uart0(tc[0]+1);    //将接收到的数据+1,再发送回去
 154   3          }
 155   2        }
 156   1        else if(2==m)
 157   1        {
 158   2          if(0x40==tc[0])
 159   2          {
 160   3            pcf8591_adchannel=tc[1]%4;
 161   3          }
 162   2          else if(0x50==tc[0])
 163   2          {
 164   3            da_val=tc[1];
 165   3          }
 166   2        }
 167   1      
 168   1        EA=1;
 169   1      }
 170          
 171          //***************************发送数据**************************
 172          void senddata_uart0(uchar dc)
 173          {
 174   1        SBUF=dc;
 175   1        while (!TI);     //当TI=0时，发送未结束，循环等待
 176   1        TI=0;            //当TI=1时，发送结束，用软件将TI清零
 177   1      }
 178          
C51 COMPILER V8.02   MAIN                                                                  01/24/2013 15:49:54 PAGE 4   

 179          //************************发送字符串数据***********************
 180          void sendstring_uart0(uchar *dd)
 181          {
 182   1        while ((*dd)!=0)
 183   1        {
 184   2          senddata_uart0(*dd);
 185   2          dd++;
 186   2        }
 187   1      }
 188          
 189          //******************以ascii码方式发送uint型数据*****************
 190          void senduint_uart0(uint dd,uchar* dec_hex)
 191          {
 192   1        uchar code asciitab[16]={
 193   1                                  '0','1','2','3','4','5','6','7',
 194   1                                  '8','9','A','B','C','D','E','F',
 195   1                                };
 196   1        if (dec_hex=="1d")
 197   1        {
 198   2          if (dd<10)
 199   2          {
 200   3            senddata_uart0((dd%10)+'0');
 201   3          }
 202   2          else if (dd<100)
 203   2          {
 204   3            senddata_uart0((dd%100/10)+'0');
 205   3            senddata_uart0((dd%10)+'0');
 206   3          }
 207   2          else if (dd<1000)
 208   2          {
 209   3            senddata_uart0((dd%1000/100)+'0');
 210   3            senddata_uart0((dd%1000%100/10)+'0');
 211   3            senddata_uart0((dd%10)+'0');
 212   3          }
 213   2          else if (dd<10000)
 214   2          {
 215   3            senddata_uart0((dd/1000)+'0');
 216   3            senddata_uart0((dd%1000/100)+'0');
 217   3            senddata_uart0((dd%1000%100/10)+'0');
 218   3            senddata_uart0((dd%10)+'0');
 219   3          }
 220   2          else
 221   2          {
 222   3            senddata_uart0((dd/10000)+'0');
 223   3            senddata_uart0((dd%10000/1000)+'0');
 224   3            senddata_uart0((dd%10000%1000/100)+'0');
 225   3            senddata_uart0((dd%10000%1000%100/10)+'0');
 226   3            senddata_uart0((dd%10)+'0');
 227   3          }
 228   2        }
 229   1        else if (dec_hex=="2d")
 230   1        {
 231   2          if (dd<100)
 232   2          {
 233   3            senddata_uart0((dd%100/10)+'0');
 234   3            senddata_uart0((dd%10)+'0');
 235   3          }
 236   2          else if (dd<1000)
 237   2          {
 238   3            senddata_uart0((dd%1000/100)+'0');
 239   3            senddata_uart0((dd%1000%100/10)+'0');
 240   3            senddata_uart0((dd%10)+'0');
C51 COMPILER V8.02   MAIN                                                                  01/24/2013 15:49:54 PAGE 5   

 241   3          }
 242   2          else if (dd<10000)
 243   2          {
 244   3            senddata_uart0((dd/1000)+'0');
 245   3            senddata_uart0((dd%1000/100)+'0');
 246   3            senddata_uart0((dd%1000%100/10)+'0');
 247   3            senddata_uart0((dd%10)+'0');
 248   3          }
 249   2          else
 250   2          {
 251   3            senddata_uart0((dd/10000)+'0');
 252   3            senddata_uart0((dd%10000/1000)+'0');
 253   3            senddata_uart0((dd%10000%1000/100)+'0');
 254   3            senddata_uart0((dd%10000%1000%100/10)+'0');
 255   3            senddata_uart0((dd%10)+'0');
 256   3          }
 257   2        }
 258   1        else if (dec_hex=="3d")
 259   1        {
 260   2          if (dd<1000)
 261   2          {
 262   3            senddata_uart0((dd%1000/100)+'0');
 263   3            senddata_uart0((dd%1000%100/10)+'0');
 264   3            senddata_uart0((dd%10)+'0');
 265   3          }
 266   2          else if (dd<10000)
 267   2          {
 268   3            senddata_uart0((dd/1000)+'0');
 269   3            senddata_uart0((dd%1000/100)+'0');
 270   3            senddata_uart0((dd%1000%100/10)+'0');
 271   3            senddata_uart0((dd%10)+'0');
 272   3          }
 273   2          else
 274   2          {
 275   3            senddata_uart0((dd/10000)+'0');
 276   3            senddata_uart0((dd%10000/1000)+'0');
 277   3            senddata_uart0((dd%10000%1000/100)+'0');
 278   3            senddata_uart0((dd%10000%1000%100/10)+'0');
 279   3            senddata_uart0((dd%10)+'0');
 280   3          }
 281   2        }
 282   1        else if (dec_hex=="4d")
 283   1        {
 284   2          if (dd<10000)
 285   2          {
 286   3            senddata_uart0((dd/1000)+'0');
 287   3            senddata_uart0((dd%1000/100)+'0');
 288   3            senddata_uart0((dd%1000%100/10)+'0');
 289   3            senddata_uart0((dd%10)+'0');
 290   3          }
 291   2          else
 292   2          {
 293   3            senddata_uart0((dd/10000)+'0');
 294   3            senddata_uart0((dd%10000/1000)+'0');
 295   3            senddata_uart0((dd%10000%1000/100)+'0');
 296   3            senddata_uart0((dd%10000%1000%100/10)+'0');
 297   3            senddata_uart0((dd%10)+'0');
 298   3          }
 299   2        }
 300   1        else if (dec_hex=="5d")
 301   1        {
 302   2          senddata_uart0((dd/10000)+'0');
C51 COMPILER V8.02   MAIN                                                                  01/24/2013 15:49:54 PAGE 6   

 303   2          senddata_uart0((dd%10000/1000)+'0');
 304   2          senddata_uart0((dd%10000%1000/100)+'0');
 305   2          senddata_uart0((dd%10000%1000%100/10)+'0');
 306   2          senddata_uart0((dd%10)+'0');
 307   2        }
 308   1      
 309   1        else if (dec_hex=="2h")
 310   1        {
 311   2          if (dd<256)
 312   2          {
 313   3            senddata_uart0(asciitab[dd>>4]);
 314   3            senddata_uart0(asciitab[dd&0x0f]);
 315   3          }
 316   2          else
 317   2          {
 318   3            senddata_uart0(asciitab[dd>>12]);
 319   3            senddata_uart0(asciitab[(dd>>8)&0x000f]);
 320   3            senddata_uart0(asciitab[(dd>>4)&0x000f]);
 321   3            senddata_uart0(asciitab[dd&0x000f]);
 322   3          }
 323   2        }
 324   1        else if (dec_hex=="4h")
 325   1        {
 326   2          senddata_uart0(asciitab[dd>>12]);
 327   2          senddata_uart0(asciitab[(dd>>8)&0x000f]);
 328   2          senddata_uart0(asciitab[(dd>>4)&0x000f]);
 329   2          senddata_uart0(asciitab[dd&0x000f]);
 330   2        }
 331   1      }
 332          
 333          //*************************延时 n*1ms********************
 334          void delay1ms(unsigned int j)
 335          {
 336   1        unsigned int i;
 337   1        for (;j>0;j--)
 338   1        {
 339   2          for (i=0;i<124;i++)
 340   2          {;}
 341   2        }
 342   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2021    ----
   CONSTANT SIZE    =    200    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
