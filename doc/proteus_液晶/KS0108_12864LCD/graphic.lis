                        .module graphic.c
                        .area data(ram, con, rel)
 0000           _l_mask_array::
 0000                   .blkb 2
                        .area idata
 0000 0102              .byte 1,2
                        .area data(ram, con, rel)
 0002                   .blkb 2
                        .area idata
 0002 0408              .byte 4,8
                        .area data(ram, con, rel)
 0004                   .blkb 2
                        .area idata
 0004 1020              .byte 16,32
                        .area data(ram, con, rel)
 0006                   .blkb 2
                        .area idata
 0006 4080              .byte 64,128
                        .area data(ram, con, rel)
 0008                   .dbfile C:\ygksb0108\programme2_can_run\graphic.c
 0008                   .dbsym e l_mask_array _l_mask_array A[8:8]c
 0008           _l_display_array::
 0008                   .blkb 2
                        .area idata
 0008 0000              .byte 0,0
                        .area data(ram, con, rel)
 000A                   .dbfile C:\ygksb0108\programme2_can_run\graphic.c
 000A                   .blkb 1
                        .area idata
 000A 00                .byte 0
                        .area data(ram, con, rel)
 000B                   .dbfile C:\ygksb0108\programme2_can_run\graphic.c
 000B                   .blkb 125
                        .area idata
 000B 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0047 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0083 0000000000        .byte 0,0,0,0,0
                        .area data(ram, con, rel)
 0088                   .dbfile C:\ygksb0108\programme2_can_run\graphic.c
 0088                   .blkb 896
                        .area idata
 0088 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 00C4 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0100 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 013C 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0178 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 01B4 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 01F0 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 022C 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0268 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 02A4 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 02E0 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 031C 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0358 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 0394 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000  .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 03D0 00000000000000000000      .word 0,0,0,0,0
 03DA 00000000000000000000      .word 0,0,0,0,0
 03E4 00000000000000000000      .word 0,0,0,0,0
 03EE 00000000000000000000      .word 0,0,0,0,0
 03F8 00000000000000000000      .word 0,0,0,0,0
 0402 000000000000      .byte 0,0,0,0,0,0
                        .area data(ram, con, rel)
 0408                   .dbfile C:\ygksb0108\programme2_can_run\graphic.c
 0408                   .dbsym e l_display_array _l_display_array A[1024:8:128]c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\ygksb0108\programme2_can_run\graphic.c
 0000                   .dbfunc e lcd_fill _lcd_fill fV
 0000           ;           page -> R20
 0000           ;            col -> R10
 0000           ;        pattern -> R22
                        .even
 0000           _lcd_fill::
 0000 0E940000          xcall push_gset3
 0004 602F              mov R22,R16
 0006                   .dbline -1
 0006                   .dbline 14
 0006           ; //*****************************************************************
 0006           ; //本头文件实现了用于液晶显示的缓冲区和基本的图形函数
 0006           ; //包括了画点，画线，画圆，画矩形等函数，每种函数都有三种方式画
 0006           ; //即 LCD_MODE_CLEAR， LCD_MODE_SET， LCD_MODE_XOR（清除，置位，异或）
 0006           ; //             ---北京交通大学电气学院 杨罡 2008.8
 0006           ; //*****************************************************************
 0006           ; #include  "graphic.h"
 0006           ; 
 0006           ;  unsigned char l_mask_array[8] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
 0006           ;  unsigned char l_display_array[LCD_Y_BYTES][LCD_X_BYTES]={0,0,0};
 0006           ;  /* TODO: avoid or PROGMEM */
 0006           ;  /* fill buffer and LCD with pattern */
 0006           ; void lcd_fill( unsigned char pattern)
 0006           ;  { unsigned char page, col;
 0006                   .dbline 16
 0006           ; 
 0006           ;    for (page=0; page<LCD_Y_BYTES; page++) 
 0006 4427              clr R20
 0008 13C0              xjmp L5
 000A           L2:
 000A                   .dbline 17
 000A           ;     { for (col=0; col<LCD_X_BYTES; col++) 
 000A                   .dbline 17
 000A AA24              clr R10
 000C 0DC0              xjmp L9
 000E           L6:
 000E                   .dbline 18
 000E 80E8              ldi R24,128
 0010 849F              mul R24,R20
 0012 1001              movw R2,R0
 0014 80E0              ldi R24,<_l_display_array
 0016 90E0              ldi R25,>_l_display_array
 0018 280E              add R2,R24
 001A 391E              adc R3,R25
 001C EA2D              mov R30,R10
 001E FF27              clr R31
 0020 E20D              add R30,R2
 0022 F31D              adc R31,R3
 0024 6083              std z+0,R22
 0026           L7:
 0026                   .dbline 17
 0026 A394              inc R10
 0028           L9:
 0028                   .dbline 17
 0028 8A2D              mov R24,R10
 002A 8038              cpi R24,128
 002C 80F3              brlo L6
 002E                   .dbline 19
 002E           L3:
 002E                   .dbline 16
 002E 4395              inc R20
 0030           L5:
 0030                   .dbline 16
 0030 4830              cpi R20,8
 0032 58F3              brlo L2
 0034                   .dbline 20
 0034           ;          l_display_array[page][col]=pattern;
 0034           ;     }
 0034           ;    lcd_update_all();
 0034 3ED0              xcall _lcd_update_all
 0036                   .dbline -2
 0036           L1:
 0036 0E940000          xcall pop_gset3
 003A                   .dbline 0 ; func end
 003A 0895              ret
 003C                   .dbsym r page 20 c
 003C                   .dbsym r col 10 c
 003C                   .dbsym r pattern 22 c
 003C                   .dbend
 003C                   .dbfunc e lcd_erase _lcd_erase fV
                        .even
 003C           _lcd_erase::
 003C                   .dbline -1
 003C                   .dbline 25
 003C           ;  }
 003C           ; 
 003C           ; 
 003C           ; void lcd_erase(void)
 003C           ;  { lcd_fill(0x00);
 003C                   .dbline 25
 003C 0027              clr R16
 003E E0DF              xcall _lcd_fill
 0040                   .dbline 26
 0040           ;    lcd_update_all();
 0040 38D0              xcall _lcd_update_all
 0042                   .dbline -2
 0042           L10:
 0042                   .dbline 0 ; func end
 0042 0895              ret
 0044                   .dbend
 0044                   .dbfunc e lcd_update _lcd_update fV
 0044           ;             yt -> R10
 0044           ;             yb -> R20
 0044           ;              y -> R22
 0044           ;         colptr -> R10,R11
 0044           ;              x -> R12
 0044           ;         bottom -> R20
 0044           ;            top -> R22
                        .even
 0044           _lcd_update::
 0044 0E940000          xcall push_gset4
 0048 422F              mov R20,R18
 004A 602F              mov R22,R16
 004C                   .dbline -1
 004C                   .dbline 41
 004C           ;  }
 004C           ; 
 004C           ; /*
 004C           ; **
 004C           ; ** Updates area of the display. Writes data from "framebuffer" 
 004C           ; ** RAM to the lcd display controller RAM.
 004C           ; ** 
 004C           ; ** Arguments Used:
 004C           ; **    top     top line of area to update.
 004C           ; **    bottom  bottom line of area to update.
 004C           ; **    from MJK-Code
 004C           ; **
 004C           ; */
 004C           ; void lcd_update( unsigned char top,  unsigned char bottom)
 004C           ;  { unsigned char x;
 004C                   .dbline 48
 004C           ;    unsigned char y;
 004C           ;    unsigned char yt;
 004C           ;    unsigned char yb;
 004C           ;    unsigned char *colptr;
 004C           ;   
 004C           ;    /* setup bytes of range */
 004C           ;    yb = bottom >> 3;
 004C 4695              lsr R20
 004E 4695              lsr R20
 0050 4695              lsr R20
 0052                   .dbline 49
 0052           ;    yt = top >> 3;             
 0052 A62E              mov R10,R22
 0054 A694              lsr R10
 0056 A694              lsr R10
 0058 A694              lsr R10
 005A                   .dbline 51
 005A           ; 
 005A           ;    for(y = yt; y <= yb; y++)
 005A 6A2D              mov R22,R10
 005C 25C0              xjmp L15
 005E           L12:
 005E                   .dbline 52
 005E           ;     {lcd_out_ctl(LCD_SET_PAGE+y,3);       /* set page */
 005E                   .dbline 52
 005E 23E0              ldi R18,3
 0060 062F              mov R16,R22
 0062 0854              subi R16,72    ; addi 184
 0064 0E940000          xcall _lcd_out_ctl
 0068                   .dbline 54
 0068           ;                                        //     lcd_out_ctl(LCD_SET_COL+LCD_STARTCOL_REVERSE,3);
 0068           ;      lcd_out_ctl(LCD_SET_COL+0,3);
 0068 23E0              ldi R18,3
 006A 00E4              ldi R16,64
 006C 0E940000          xcall _lcd_out_ctl
 0070                   .dbline 56
 0070           ;        
 0070           ;      colptr = &l_display_array[y][0];
 0070 80E8              ldi R24,128
 0072 869F              mul R24,R22
 0074 5001              movw R10,R0
 0076 80E0              ldi R24,<_l_display_array
 0078 90E0              ldi R25,>_l_display_array
 007A A80E              add R10,R24
 007C B91E              adc R11,R25
 007E                   .dbline 58
 007E           ; 
 007E           ;       for (x=0; x < LCD_X_BYTES; x++)
 007E CC24              clr R12
 0080 0FC0              xjmp L19
 0082           L16:
 0082                   .dbline 59
 0082           ;        { if ( x <LCD_X_BYTES/2 ) 
 0082                   .dbline 59
 0082 8C2D              mov R24,R12
 0084 8034              cpi R24,64
 0086 30F4              brsh L20
 0088                   .dbline 60
 0088           ;             lcd_out_dat_l(*colptr++);
 0088 F501              movw R30,R10
 008A 0191              ld R16,Z+
 008C 5F01              movw R10,R30
 008E 0E940000          xcall _lcd_out_dat_l
 0092 05C0              xjmp L21
 0094           L20:
 0094                   .dbline 62
 0094           ;          else 
 0094           ;             lcd_out_dat_r(*colptr++);
 0094 F501              movw R30,R10
 0096 0191              ld R16,Z+
 0098 5F01              movw R10,R30
 009A 0E940000          xcall _lcd_out_dat_r
 009E           L21:
 009E                   .dbline 63
 009E           L17:
 009E                   .dbline 58
 009E C394              inc R12
 00A0           L19:
 00A0                   .dbline 58
 00A0 8C2D              mov R24,R12
 00A2 8038              cpi R24,128
 00A4 70F3              brlo L16
 00A6                   .dbline 65
 00A6           L13:
 00A6                   .dbline 51
 00A6 6395              inc R22
 00A8           L15:
 00A8                   .dbline 51
 00A8 4617              cp R20,R22
 00AA C8F6              brsh L12
 00AC                   .dbline -2
 00AC           L11:
 00AC 0E940000          xcall pop_gset4
 00B0                   .dbline 0 ; func end
 00B0 0895              ret
 00B2                   .dbsym r yt 10 c
 00B2                   .dbsym r yb 20 c
 00B2                   .dbsym r y 22 c
 00B2                   .dbsym r colptr 10 pc
 00B2                   .dbsym r x 12 c
 00B2                   .dbsym r bottom 20 c
 00B2                   .dbsym r top 22 c
 00B2                   .dbend
 00B2                   .dbfunc e lcd_update_all _lcd_update_all fV
                        .even
 00B2           _lcd_update_all::
 00B2                   .dbline -1
 00B2                   .dbline 71
 00B2           ;        }
 00B2           ;  
 00B2           ;     }
 00B2           ;  }
 00B2           ; 
 00B2           ; 
 00B2           ; 
 00B2           ; void lcd_update_all(void)
 00B2           ;  { lcd_update(SCRN_TOP,SCRN_BOTTOM);
 00B2                   .dbline 71
 00B2 2FE3              ldi R18,63
 00B4 0027              clr R16
 00B6 C6DF              xcall _lcd_update
 00B8                   .dbline -2
 00B8           L22:
 00B8                   .dbline 0 ; func end
 00B8 0895              ret
 00BA                   .dbend
 00BA                   .dbfunc e lcd_dot _lcd_dot fV
 00BA           ;        pBuffer -> R20,R21
 00BA           ;        bitmask -> R22
 00BA           ;          yByte -> R20
 00BA           ;         bitnum -> R22
 00BA           ;           mode -> y+6
 00BA           ;              y -> R18
 00BA           ;              x -> R16
                        .even
 00BA           _lcd_dot::
 00BA 0E940000          xcall push_gset3
 00BE                   .dbline -1
 00BE                   .dbline 78
 00BE           ;  }
 00BE           ; 
 00BE           ; 
 00BE           ; 
 00BE           ; /* sets/clears/switchs(XOR) dot at (x,y) */
 00BE           ; void lcd_dot( unsigned char x,  unsigned char y,  unsigned char mode) 
 00BE           ;  { unsigned char bitnum, bitmask, yByte;
 00BE                   .dbline 81
 00BE 8FE7              ldi R24,127
 00C0 8017              cp R24,R16
 00C2 18F0              brlo L26
 00C4 8FE3              ldi R24,63
 00C6 8217              cp R24,R18
 00C8 08F4              brsh L24
 00CA           L26:
 00CA                   .dbline 81
 00CA           ;    unsigned char *pBuffer; /* pointer used for optimisation */
 00CA           ; 
 00CA           ;    if ( ( x > SCRN_RIGHT ) || ( y > SCRN_BOTTOM ) ) return;
 00CA 38C0              xjmp L23
 00CC           L24:
 00CC                   .dbline 83
 00CC           ; 
 00CC           ;    yByte   = y >> 3; 
 00CC 422F              mov R20,R18
 00CE 4695              lsr R20
 00D0 4695              lsr R20
 00D2 4695              lsr R20
 00D4                   .dbline 84
 00D4           ;    bitnum  = y & 0x07;
 00D4 622F              mov R22,R18
 00D6 6770              andi R22,7
 00D8                   .dbline 85
 00D8           ;    bitmask = l_mask_array[bitnum]; // bitmask = ( 1 << (y & 0x07) );
 00D8 80E0              ldi R24,<_l_mask_array
 00DA 90E0              ldi R25,>_l_mask_array
 00DC E62F              mov R30,R22
 00DE FF27              clr R31
 00E0 E80F              add R30,R24
 00E2 F91F              adc R31,R25
 00E4 6081              ldd R22,z+0
 00E6                   .dbline 86
 00E6           ;    pBuffer = &(l_display_array[yByte][x]);
 00E6 80E8              ldi R24,128
 00E8 849F              mul R24,R20
 00EA 1001              movw R2,R0
 00EC 80E0              ldi R24,<_l_display_array
 00EE 90E0              ldi R25,>_l_display_array
 00F0 280E              add R2,R24
 00F2 391E              adc R3,R25
 00F4 402F              mov R20,R16
 00F6 5527              clr R21
 00F8 420D              add R20,R2
 00FA 531D              adc R21,R3
 00FC                   .dbline 87
 00FC           ;    switch (mode) 
 00FC AE80              ldd R10,y+6
 00FE BB24              clr R11
 0100 AA20              tst R10
 0102 11F4              brne X0
 0104 BB20              tst R11
 0106 79F0              breq L31
 0108           X0:
 0108 C501              movw R24,R10
 010A 8130              cpi R24,1
 010C E0E0              ldi R30,0
 010E 9E07              cpc R25,R30
 0110 29F0              breq L30
 0112 8230              cpi R24,2
 0114 E0E0              ldi R30,0
 0116 9E07              cpc R25,R30
 0118 69F0              breq L32
 011A 10C0              xjmp L28
 011C           X1:
 011C                   .dbline 88
 011C           ;     { case LCD_MODE_SET:
 011C           L30:
 011C                   .dbline 89
 011C           ;          *pBuffer |= bitmask;
 011C FA01              movw R30,R20
 011E 2080              ldd R2,z+0
 0120 262A              or R2,R22
 0122 2082              std z+0,R2
 0124                   .dbline 90
 0124           ;          break;
 0124 0BC0              xjmp L28
 0126           L31:
 0126                   .dbline 92
 0126           ;       case LCD_MODE_CLEAR:
 0126           ;          *pBuffer &= ~bitmask;
 0126 262E              mov R2,R22
 0128 2094              com R2
 012A FA01              movw R30,R20
 012C 3080              ldd R3,z+0
 012E 3220              and R3,R2
 0130 3082              std z+0,R3
 0132                   .dbline 93
 0132           ;          break;
 0132 04C0              xjmp L28
 0134           L32:
 0134                   .dbline 95
 0134 FA01              movw R30,R20
 0136 2080              ldd R2,z+0
 0138 2626              eor R2,R22
 013A 2082              std z+0,R2
 013C                   .dbline 96
 013C                   .dbline 97
 013C           L28:
 013C                   .dbline -2
 013C           L23:
 013C 0E940000          xcall pop_gset3
 0140                   .dbline 0 ; func end
 0140 0895              ret
 0142                   .dbsym r pBuffer 20 pc
 0142                   .dbsym r bitmask 22 c
 0142                   .dbsym r yByte 20 c
 0142                   .dbsym r bitnum 22 c
 0142                   .dbsym l mode 6 c
 0142                   .dbsym r y 18 c
 0142                   .dbsym r x 16 c
 0142                   .dbend
 0142                   .dbfunc e lcd_line _lcd_line fV
 0142           ;           yTmp -> y+6
 0142           ;           xTmp -> y+5
 0142           ;           yAlt -> R20
 0142           ;              m -> R22,R23
 0142           ;              y -> R10
 0142           ;         length -> R12
 0142           ;              i -> R14
 0142           ;           mode -> y+23
 0142           ;             y2 -> y+21
 0142           ;             x2 -> y+19
 0142           ;             y1 -> y+17
 0142           ;             x1 -> R8
                        .even
 0142           _lcd_line::
 0142 3A93              st -y,r19
 0144 2A93              st -y,r18
 0146 0E940000          xcall push_gset5
 014A 802E              mov R8,R16
 014C 2797              sbiw R28,7
 014E                   .dbline -1
 014E                   .dbline 105
 014E           ;       case LCD_MODE_XOR:
 014E           ;          *pBuffer ^= bitmask;
 014E           ;          break;
 014E           ;       default: break;
 014E           ;     }         
 014E           ;  }
 014E           ; 
 014E           ; 
 014E           ; /* line- and circle-function from a KS0108-library by F. Thiele */
 014E           ; 
 014E           ; void lcd_line( uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2,  uint8_t mode ) 
 014E           ;  { uint8_t length, xTmp, yTmp, i, y, yAlt;
 014E                   .dbline 108
 014E           ;    int16_t m;
 014E           ;    
 014E           ;    if(x1 == x2) 
 014E 0B88              ldd R0,y+19
 0150 8014              cp R8,R0
 0152 F9F4              brne L34
 0154                   .dbline 109
 0154           ;     { // vertical line
 0154                   .dbline 111
 0154           ;       // x1|y1 must be the upper point
 0154           ;       if(y1 > y2) 
 0154 0D88              ldd R0,y+21
 0156 0989              ldd R16,y+17
 0158 0016              cp R0,R16
 015A 50F4              brsh L36
 015C                   .dbline 112
 015C           ;        { xTmp = x1;
 015C                   .dbline 112
 015C 8D82              std y+5,R8
 015E                   .dbline 113
 015E           ;          yTmp = y1;
 015E 0988              ldd R0,y+17
 0160 0E82              std y+6,R0
 0162                   .dbline 114
 0162           ;          x1 = x2;
 0162 8B88              ldd R8,y+19
 0164                   .dbline 115
 0164           ;          y1 = y2;
 0164 0D88              ldd R0,y+21
 0166 098A              std y+17,R0
 0168                   .dbline 116
 0168           ;          x2 = xTmp;
 0168 0D80              ldd R0,y+5
 016A 0B8A              std y+19,R0
 016C                   .dbline 117
 016C           ;          y2 = yTmp;
 016C 0E80              ldd R0,y+6
 016E 0D8A              std y+21,R0
 0170                   .dbline 118
 0170           ;        }
 0170           L36:
 0170                   .dbline 119
 0170           ;       length = y2-y1;
 0170 CD88              ldd R12,y+21
 0172 0988              ldd R0,y+17
 0174 C018              sub R12,R0
 0176                   .dbline 120
 0176           ;       for(i=0; i<=length; i++) 
 0176 EE24              clr R14
 0178 09C0              xjmp L41
 017A           L38:
 017A                   .dbline 121
 017A 0F88              ldd R0,y+23
 017C 0882              std y+0,R0
 017E 2989              ldd R18,y+17
 0180 2E0D              add R18,R14
 0182 082D              mov R16,R8
 0184 0F93              push R16
 0186 99DF              xcall _lcd_dot
 0188 8F90              pop R8
 018A           L39:
 018A                   .dbline 120
 018A E394              inc R14
 018C           L41:
 018C                   .dbline 120
 018C CE14              cp R12,R14
 018E A8F7              brsh L38
 0190                   .dbline 122
 0190           ;          lcd_dot(x1, y1+i, mode);
 0190           ;     } 
 0190 18C1              xjmp L35
 0192           L34:
 0192                   .dbline 123
 0192           ;    else if(y1 == y2) 
 0192 0988              ldd R0,y+17
 0194 0D89              ldd R16,y+21
 0196 0016              cp R0,R16
 0198 E9F4              brne L42
 019A                   .dbline 124
 019A           ;     { // horizontal line
 019A                   .dbline 126
 019A           ;       // x1|y1 must be the left point
 019A           ;       if(x1 > x2) 
 019A 0B88              ldd R0,y+19
 019C 0814              cp R0,R8
 019E 50F4              brsh L44
 01A0                   .dbline 127
 01A0           ;        { xTmp = x1;
 01A0                   .dbline 127
 01A0 8D82              std y+5,R8
 01A2                   .dbline 128
 01A2           ;          yTmp = y1;
 01A2 0988              ldd R0,y+17
 01A4 0E82              std y+6,R0
 01A6                   .dbline 129
 01A6           ;          x1 = x2;
 01A6 8B88              ldd R8,y+19
 01A8                   .dbline 130
 01A8           ;          y1 = y2;
 01A8 0D88              ldd R0,y+21
 01AA 098A              std y+17,R0
 01AC                   .dbline 131
 01AC           ;          x2 = xTmp;
 01AC 0D80              ldd R0,y+5
 01AE 0B8A              std y+19,R0
 01B0                   .dbline 132
 01B0           ;          y2 = yTmp;
 01B0 0E80              ldd R0,y+6
 01B2 0D8A              std y+21,R0
 01B4                   .dbline 133
 01B4           ;        }
 01B4           L44:
 01B4                   .dbline 135
 01B4           ; 
 01B4           ;       length = x2-x1;
 01B4 CB88              ldd R12,y+19
 01B6 C818              sub R12,R8
 01B8                   .dbline 136
 01B8           ;       for(i=0; i<=length; i++) 
 01B8 EE24              clr R14
 01BA 09C0              xjmp L49
 01BC           L46:
 01BC                   .dbline 137
 01BC 0F88              ldd R0,y+23
 01BE 0882              std y+0,R0
 01C0 2989              ldd R18,y+17
 01C2 082D              mov R16,R8
 01C4 0E0D              add R16,R14
 01C6 8F92              push R8
 01C8 78DF              xcall _lcd_dot
 01CA 8F90              pop R8
 01CC           L47:
 01CC                   .dbline 136
 01CC E394              inc R14
 01CE           L49:
 01CE                   .dbline 136
 01CE CE14              cp R12,R14
 01D0 A8F7              brsh L46
 01D2                   .dbline 139
 01D2           ;          lcd_dot(x1+i, y1, mode);
 01D2           ;        
 01D2           ;     } 
 01D2 F7C0              xjmp L43
 01D4           L42:
 01D4                   .dbline 141
 01D4           ;    else 
 01D4           ;     { // x1 must be smaller than x2
 01D4                   .dbline 142
 01D4           ;       if(x1 > x2) 
 01D4 0B88              ldd R0,y+19
 01D6 0814              cp R0,R8
 01D8 50F4              brsh L50
 01DA                   .dbline 143
 01DA           ;        { xTmp = x1;
 01DA                   .dbline 143
 01DA 8D82              std y+5,R8
 01DC                   .dbline 144
 01DC           ;          yTmp = y1;
 01DC 0988              ldd R0,y+17
 01DE 0E82              std y+6,R0
 01E0                   .dbline 145
 01E0           ;          x1 = x2;
 01E0 8B88              ldd R8,y+19
 01E2                   .dbline 146
 01E2           ;          y1 = y2;
 01E2 0D88              ldd R0,y+21
 01E4 098A              std y+17,R0
 01E6                   .dbline 147
 01E6           ;          x2 = xTmp;
 01E6 0D80              ldd R0,y+5
 01E8 0B8A              std y+19,R0
 01EA                   .dbline 148
 01EA           ;          y2 = yTmp;
 01EA 0E80              ldd R0,y+6
 01EC 0D8A              std y+21,R0
 01EE                   .dbline 149
 01EE           ;        }
 01EE           L50:
 01EE                   .dbline 151
 01EE           ;               
 01EE           ;       if((y2-y1) >= (x2-x1) || (y1-y2) >= (x2-x1)) 
 01EE 282C              mov R2,R8
 01F0 3324              clr R3
 01F2 4B88              ldd R4,y+19
 01F4 5524              clr R5
 01F6 4218              sub R4,R2
 01F8 5308              sbc R5,R3
 01FA 2988              ldd R2,y+17
 01FC 3324              clr R3
 01FE 6D88              ldd R6,y+21
 0200 7724              clr R7
 0202 6218              sub R6,R2
 0204 7308              sbc R7,R3
 0206 6414              cp R6,R4
 0208 7504              cpc R7,R5
 020A 54F4              brge L54
 020C 2D88              ldd R2,y+21
 020E 3324              clr R3
 0210 6988              ldd R6,y+17
 0212 7724              clr R7
 0214 6218              sub R6,R2
 0216 7308              sbc R7,R3
 0218 6414              cp R6,R4
 021A 7504              cpc R7,R5
 021C 0CF4              brge X2
 021E 63C0              xjmp L52
 0220           X2:
 0220           L54:
 0220                   .dbline 152
 0220           ;        { // angle larger or equal 45?
 0220                   .dbline 153
 0220           ;          length = x2-x1;                                                              // not really the length :)
 0220 CB88              ldd R12,y+19
 0222 C818              sub R12,R8
 0224                   .dbline 154
 0224           ;          m = ((y2-y1)*200)/length;
 0224 2D88              ldd R2,y+21
 0226 0988              ldd R0,y+17
 0228 2018              sub R2,R0
 022A 88EC              ldi R24,200
 022C 829D              mul R24,R2
 022E 8001              movw R16,R0
 0230 2C2D              mov R18,R12
 0232 3327              clr R19
 0234 0E940000          xcall div16s
 0238 B801              movw R22,R16
 023A                   .dbline 155
 023A           ;          yAlt = y1;
 023A 4989              ldd R20,y+17
 023C                   .dbline 156
 023C           ;          for(i=0; i<=length; i++) 
 023C EE24              clr R14
 023E 4FC0              xjmp L58
 0240           L55:
 0240                   .dbline 157
 0240           ;           { y = ((m*i)/200)+y1;
 0240                   .dbline 157
 0240 2E2D              mov R18,R14
 0242 3327              clr R19
 0244 8B01              movw R16,R22
 0246 0E940000          xcall empy16s
 024A 28EC              ldi R18,200
 024C 30E0              ldi R19,0
 024E 0E940000          xcall div16s
 0252 A02E              mov R10,R16
 0254 2988              ldd R2,y+17
 0256 3324              clr R3
 0258 A20C              add R10,R2
 025A B31C              adc R11,R3
 025C                   .dbline 158
 025C           ;             if((m*i)%200 >= 100)
 025C 2E2D              mov R18,R14
 025E 3327              clr R19
 0260 8B01              movw R16,R22
 0262 0E940000          xcall empy16s
 0266 28EC              ldi R18,200
 0268 30E0              ldi R19,0
 026A 0E940000          xcall mod16s
 026E 0436              cpi R16,100
 0270 E0E0              ldi R30,0
 0272 1E07              cpc R17,R30
 0274 14F0              brlt L59
 0276                   .dbline 159
 0276           ;                y++;
 0276 A394              inc R10
 0278 0FC0              xjmp L60
 027A           L59:
 027A                   .dbline 160
 027A           ;             else if((m*i)%200 <= -100)
 027A 2E2D              mov R18,R14
 027C 3327              clr R19
 027E 8B01              movw R16,R22
 0280 0E940000          xcall empy16s
 0284 28EC              ldi R18,200
 0286 30E0              ldi R19,0
 0288 0E940000          xcall mod16s
 028C 8CE9              ldi R24,-100
 028E 9FEF              ldi R25,-1
 0290 8017              cp R24,R16
 0292 9107              cpc R25,R17
 0294 0CF0              brlt L61
 0296                   .dbline 161
 0296           ;                y--;
 0296 AA94              dec R10
 0298           L61:
 0298           L60:
 0298                   .dbline 163
 0298           ;                               
 0298           ;             lcd_line(x1+i, yAlt, x1+i, y, mode ); /* wuff wuff recurs. */
 0298 0F88              ldd R0,y+23
 029A 0C82              std y+4,R0
 029C AA82              std y+2,R10
 029E 282C              mov R2,R8
 02A0 2E0C              add R2,R14
 02A2 2882              std y+0,R2
 02A4 242F              mov R18,R20
 02A6 022D              mov R16,R2
 02A8 8F92              push R8
 02AA 4BDF              xcall _lcd_line
 02AC 8F90              pop R8
 02AE                   .dbline 164
 02AE           ;             if(length<=(y2-y1) && y1 < y2)
 02AE 2D88              ldd R2,y+21
 02B0 0988              ldd R0,y+17
 02B2 2018              sub R2,R0
 02B4 2C14              cp R2,R12
 02B6 30F0              brlo L63
 02B8 0D89              ldd R16,y+21
 02BA 0016              cp R0,R16
 02BC 18F4              brsh L63
 02BE                   .dbline 165
 02BE           ;                yAlt = y+1;
 02BE 4A2D              mov R20,R10
 02C0 4F5F              subi R20,255    ; addi 1
 02C2 0CC0              xjmp L64
 02C4           L63:
 02C4                   .dbline 166
 02C4           ;             else if(length<=(y1-y2) && y1 > y2)
 02C4 2988              ldd R2,y+17
 02C6 0D88              ldd R0,y+21
 02C8 2018              sub R2,R0
 02CA 2C14              cp R2,R12
 02CC 30F0              brlo L65
 02CE 0989              ldd R16,y+17
 02D0 0016              cp R0,R16
 02D2 18F4              brsh L65
 02D4                   .dbline 167
 02D4           ;                yAlt = y-1;
 02D4 4A2D              mov R20,R10
 02D6 4150              subi R20,1
 02D8 01C0              xjmp L66
 02DA           L65:
 02DA                   .dbline 169
 02DA           ;             else
 02DA           ;                yAlt = y;
 02DA 4A2D              mov R20,R10
 02DC           L66:
 02DC           L64:
 02DC                   .dbline 170
 02DC           L56:
 02DC                   .dbline 156
 02DC E394              inc R14
 02DE           L58:
 02DE                   .dbline 156
 02DE CE14              cp R12,R14
 02E0 08F0              brlo X3
 02E2 AECF              xjmp L55
 02E4           X3:
 02E4                   .dbline 171
 02E4           ;           }
 02E4           ;        } 
 02E4 6EC0              xjmp L53
 02E6           L52:
 02E6                   .dbline 173
 02E6           ;       else
 02E6           ;        { // angle smaller 45?
 02E6                   .dbline 175
 02E6           ;          // y1 must be smaller than y2
 02E6           ;          if(y1 > y2)
 02E6 0D88              ldd R0,y+21
 02E8 0989              ldd R16,y+17
 02EA 0016              cp R0,R16
 02EC 50F4              brsh L67
 02EE                   .dbline 176
 02EE           ;           { xTmp = x1;
 02EE                   .dbline 176
 02EE 8D82              std y+5,R8
 02F0                   .dbline 177
 02F0           ;             yTmp = y1;
 02F0 0988              ldd R0,y+17
 02F2 0E82              std y+6,R0
 02F4                   .dbline 178
 02F4           ;             x1 = x2;
 02F4 8B88              ldd R8,y+19
 02F6                   .dbline 179
 02F6           ;             y1 = y2;
 02F6 0D88              ldd R0,y+21
 02F8 098A              std y+17,R0
 02FA                   .dbline 180
 02FA           ;             x2 = xTmp;
 02FA 0D80              ldd R0,y+5
 02FC 0B8A              std y+19,R0
 02FE                   .dbline 181
 02FE           ;             y2 = yTmp;
 02FE 0E80              ldd R0,y+6
 0300 0D8A              std y+21,R0
 0302                   .dbline 182
 0302           ;           }
 0302           L67:
 0302                   .dbline 183
 0302           ;          length = y2-y1;
 0302 CD88              ldd R12,y+21
 0304 0988              ldd R0,y+17
 0306 C018              sub R12,R0
 0308                   .dbline 184
 0308           ;          m = ((x2-x1)*200)/length;
 0308 2B88              ldd R2,y+19
 030A 2818              sub R2,R8
 030C 88EC              ldi R24,200
 030E 829D              mul R24,R2
 0310 8001              movw R16,R0
 0312 2C2D              mov R18,R12
 0314 3327              clr R19
 0316 0E940000          xcall div16s
 031A B801              movw R22,R16
 031C                   .dbline 185
 031C           ;          yAlt = x1;
 031C 482D              mov R20,R8
 031E                   .dbline 186
 031E           ;          for(i=0; i<=length; i++)
 031E EE24              clr R14
 0320 4DC0              xjmp L72
 0322           L69:
 0322                   .dbline 187
 0322           ;           { y = ((m*i)/200)+x1;
 0322                   .dbline 187
 0322 2E2D              mov R18,R14
 0324 3327              clr R19
 0326 8B01              movw R16,R22
 0328 0E940000          xcall empy16s
 032C 28EC              ldi R18,200
 032E 30E0              ldi R19,0
 0330 0E940000          xcall div16s
 0334 A02E              mov R10,R16
 0336 282C              mov R2,R8
 0338 3324              clr R3
 033A A20C              add R10,R2
 033C B31C              adc R11,R3
 033E                   .dbline 189
 033E           ; 
 033E           ;             if((m*i)%200 >= 100)
 033E 2E2D              mov R18,R14
 0340 3327              clr R19
 0342 8B01              movw R16,R22
 0344 0E940000          xcall empy16s
 0348 28EC              ldi R18,200
 034A 30E0              ldi R19,0
 034C 0E940000          xcall mod16s
 0350 0436              cpi R16,100
 0352 E0E0              ldi R30,0
 0354 1E07              cpc R17,R30
 0356 14F0              brlt L73
 0358                   .dbline 190
 0358           ;                y++;
 0358 A394              inc R10
 035A 0FC0              xjmp L74
 035C           L73:
 035C                   .dbline 191
 035C           ;             else if((m*i)%200 <= -100)
 035C 2E2D              mov R18,R14
 035E 3327              clr R19
 0360 8B01              movw R16,R22
 0362 0E940000          xcall empy16s
 0366 28EC              ldi R18,200
 0368 30E0              ldi R19,0
 036A 0E940000          xcall mod16s
 036E 8CE9              ldi R24,-100
 0370 9FEF              ldi R25,-1
 0372 8017              cp R24,R16
 0374 9107              cpc R25,R17
 0376 0CF0              brlt L75
 0378                   .dbline 192
 0378           ;                y--;
 0378 AA94              dec R10
 037A           L75:
 037A           L74:
 037A                   .dbline 194
 037A           ; 
 037A           ;             lcd_line(yAlt, y1+i, y, y1+i, mode); /* wuff */
 037A 0F88              ldd R0,y+23
 037C 0C82              std y+4,R0
 037E 2988              ldd R2,y+17
 0380 2E0C              add R2,R14
 0382 2A82              std y+2,R2
 0384 A882              std y+0,R10
 0386 222D              mov R18,R2
 0388 042F              mov R16,R20
 038A 8F92              push R8
 038C DADE              xcall _lcd_line
 038E 8F90              pop R8
 0390                   .dbline 195
 0390           ;             if(length<=(x2-x1) && x1 < x2)
 0390 2B88              ldd R2,y+19
 0392 2818              sub R2,R8
 0394 2C14              cp R2,R12
 0396 30F0              brlo L77
 0398 0B88              ldd R0,y+19
 039A 8014              cp R8,R0
 039C 18F4              brsh L77
 039E                   .dbline 196
 039E           ;                yAlt = y+1;
 039E 4A2D              mov R20,R10
 03A0 4F5F              subi R20,255    ; addi 1
 03A2 0BC0              xjmp L78
 03A4           L77:
 03A4                   .dbline 197
 03A4           ;             else if(length<=(x1-x2) && x1 > x2)
 03A4 282C              mov R2,R8
 03A6 0B88              ldd R0,y+19
 03A8 2018              sub R2,R0
 03AA 2C14              cp R2,R12
 03AC 28F0              brlo L79
 03AE 0814              cp R0,R8
 03B0 18F4              brsh L79
 03B2                   .dbline 198
 03B2           ;                yAlt = y-1;
 03B2 4A2D              mov R20,R10
 03B4 4150              subi R20,1
 03B6 01C0              xjmp L80
 03B8           L79:
 03B8                   .dbline 200
 03B8           ;             else
 03B8           ;                yAlt = y;
 03B8 4A2D              mov R20,R10
 03BA           L80:
 03BA           L78:
 03BA                   .dbline 201
 03BA           L70:
 03BA                   .dbline 186
 03BA E394              inc R14
 03BC           L72:
 03BC                   .dbline 186
 03BC CE14              cp R12,R14
 03BE 08F0              brlo X4
 03C0 B0CF              xjmp L69
 03C2           X4:
 03C2                   .dbline 202
 03C2           ;           }
 03C2           ;        }
 03C2           L53:
 03C2                   .dbline 203
 03C2           ;     }
 03C2           L43:
 03C2           L35:
 03C2                   .dbline -2
 03C2           L33:
 03C2 2796              adiw R28,7
 03C4 0E940000          xcall pop_gset5
 03C8 2296              adiw R28,2
 03CA                   .dbline 0 ; func end
 03CA 0895              ret
 03CC                   .dbsym l yTmp 6 c
 03CC                   .dbsym l xTmp 5 c
 03CC                   .dbsym r yAlt 20 c
 03CC                   .dbsym r m 22 I
 03CC                   .dbsym r y 10 c
 03CC                   .dbsym r length 12 c
 03CC                   .dbsym r i 14 c
 03CC                   .dbsym l mode 23 c
 03CC                   .dbsym l y2 21 c
 03CC                   .dbsym l x2 19 c
 03CC                   .dbsym l y1 17 c
 03CC                   .dbsym r x1 8 c
 03CC                   .dbend
 03CC                   .dbfunc e lcd_circle _lcd_circle fV
 03CC           ;        tSwitch -> R20,R21
 03CC           ;              d -> R22
 03CC           ;              y -> R10,R11
 03CC           ;              x -> R12,R13
 03CC           ;           mode -> R14
 03CC           ;         radius -> y+15
 03CC           ;        yCenter -> y+13
 03CC           ;        xCenter -> y+11
                        .even
 03CC           _lcd_circle::
 03CC 0E940000          xcall push_arg4
 03D0 0E940000          xcall push_gset5
 03D4 2197              sbiw R28,1
 03D6 E988              ldd R14,y+17
 03D8                   .dbline -1
 03D8                   .dbline 209
 03D8           ;  }
 03D8           ; 
 03D8           ; 
 03D8           ; void lcd_circle( uint8_t xCenter, uint8_t yCenter, 
 03D8           ;                  uint8_t radius,  uint8_t mode) 
 03D8           ;  {  int tSwitch, y, x = 0;
 03D8                   .dbline 209
 03D8 CC24              clr R12
 03DA DD24              clr R13
 03DC                   .dbline 212
 03DC           ;    uint8_t d;
 03DC           ;    
 03DC           ;    d = yCenter - xCenter;
 03DC 6D85              ldd R22,y+13
 03DE 0B84              ldd R0,y+11
 03E0 6019              sub R22,R0
 03E2                   .dbline 213
 03E2           ;    y = radius;
 03E2 AF84              ldd R10,y+15
 03E4 BB24              clr R11
 03E6                   .dbline 214
 03E6           ;    tSwitch = 3 - 2 * radius;
 03E6 82E0              ldi R24,2
 03E8 0A2C              mov R0,R10
 03EA 809D              mul R24,R0
 03EC 43E0              ldi R20,3
 03EE 50E0              ldi R21,0
 03F0 4019              sub R20,R0
 03F2 5109              sbc R21,R1
 03F4 7FC0              xjmp L83
 03F6           L82:
 03F6                   .dbline 217
 03F6           ; 
 03F6           ;    while (x <= y) 
 03F6           ;     { lcd_dot(xCenter + x, yCenter + y, mode);
 03F6                   .dbline 217
 03F6 E882              std y+0,R14
 03F8 2D85              ldd R18,y+13
 03FA 3327              clr R19
 03FC 2A0D              add R18,R10
 03FE 3B1D              adc R19,R11
 0400 0B85              ldd R16,y+11
 0402 1127              clr R17
 0404 0C0D              add R16,R12
 0406 1D1D              adc R17,R13
 0408 58DE              xcall _lcd_dot
 040A                   .dbline 218
 040A           ;       lcd_dot(xCenter + x, yCenter - y, mode);
 040A E882              std y+0,R14
 040C 2D85              ldd R18,y+13
 040E 3327              clr R19
 0410 2A19              sub R18,R10
 0412 3B09              sbc R19,R11
 0414 0B85              ldd R16,y+11
 0416 1127              clr R17
 0418 0C0D              add R16,R12
 041A 1D1D              adc R17,R13
 041C 4EDE              xcall _lcd_dot
 041E                   .dbline 220
 041E           ;       
 041E           ;       lcd_dot(xCenter - x, yCenter + y, mode);
 041E E882              std y+0,R14
 0420 2D85              ldd R18,y+13
 0422 3327              clr R19
 0424 2A0D              add R18,R10
 0426 3B1D              adc R19,R11
 0428 0B85              ldd R16,y+11
 042A 1127              clr R17
 042C 0C19              sub R16,R12
 042E 1D09              sbc R17,R13
 0430 44DE              xcall _lcd_dot
 0432                   .dbline 221
 0432           ;       lcd_dot(xCenter - x, yCenter - y, mode);
 0432 E882              std y+0,R14
 0434 2D85              ldd R18,y+13
 0436 3327              clr R19
 0438 2A19              sub R18,R10
 043A 3B09              sbc R19,R11
 043C 0B85              ldd R16,y+11
 043E 1127              clr R17
 0440 0C19              sub R16,R12
 0442 1D09              sbc R17,R13
 0444 3ADE              xcall _lcd_dot
 0446                   .dbline 223
 0446           ;       
 0446           ;       lcd_dot(yCenter + y - d, yCenter + x, mode);
 0446 E882              std y+0,R14
 0448 2D85              ldd R18,y+13
 044A 3327              clr R19
 044C 2C0D              add R18,R12
 044E 3D1D              adc R19,R13
 0450 0D85              ldd R16,y+13
 0452 1127              clr R17
 0454 0A0D              add R16,R10
 0456 1B1D              adc R17,R11
 0458 262E              mov R2,R22
 045A 3324              clr R3
 045C 0219              sub R16,R2
 045E 1309              sbc R17,R3
 0460 2CDE              xcall _lcd_dot
 0462                   .dbline 224
 0462           ;       lcd_dot(yCenter + y - d, yCenter - x, mode);
 0462 E882              std y+0,R14
 0464 2D85              ldd R18,y+13
 0466 3327              clr R19
 0468 2C19              sub R18,R12
 046A 3D09              sbc R19,R13
 046C 0D85              ldd R16,y+13
 046E 1127              clr R17
 0470 0A0D              add R16,R10
 0472 1B1D              adc R17,R11
 0474 262E              mov R2,R22
 0476 3324              clr R3
 0478 0219              sub R16,R2
 047A 1309              sbc R17,R3
 047C 1EDE              xcall _lcd_dot
 047E                   .dbline 226
 047E           ;    
 047E           ;       lcd_dot(yCenter - y - d, yCenter + x, mode);
 047E E882              std y+0,R14
 0480 2D85              ldd R18,y+13
 0482 3327              clr R19
 0484 2C0D              add R18,R12
 0486 3D1D              adc R19,R13
 0488 0D85              ldd R16,y+13
 048A 1127              clr R17
 048C 0A19              sub R16,R10
 048E 1B09              sbc R17,R11
 0490 262E              mov R2,R22
 0492 3324              clr R3
 0494 0219              sub R16,R2
 0496 1309              sbc R17,R3
 0498 10DE              xcall _lcd_dot
 049A                   .dbline 227
 049A           ;       lcd_dot(yCenter - y - d, yCenter - x, mode);
 049A E882              std y+0,R14
 049C 2D85              ldd R18,y+13
 049E 3327              clr R19
 04A0 2C19              sub R18,R12
 04A2 3D09              sbc R19,R13
 04A4 0D85              ldd R16,y+13
 04A6 1127              clr R17
 04A8 0A19              sub R16,R10
 04AA 1B09              sbc R17,R11
 04AC 262E              mov R2,R22
 04AE 3324              clr R3
 04B0 0219              sub R16,R2
 04B2 1309              sbc R17,R3
 04B4 02DE              xcall _lcd_dot
 04B6                   .dbline 229
 04B6           ; 
 04B6           ;       if (tSwitch<0) 
 04B6 4030              cpi R20,0
 04B8 E0E0              ldi R30,0
 04BA 5E07              cpc R21,R30
 04BC 54F4              brge L85
 04BE                   .dbline 230
 04BE           ;          tSwitch += (4 * x + 6);
 04BE 04E0              ldi R16,4
 04C0 10E0              ldi R17,0
 04C2 9601              movw R18,R12
 04C4 0E940000          xcall empy16s
 04C8 C801              movw R24,R16
 04CA 0696              adiw R24,6
 04CC 480F              add R20,R24
 04CE 591F              adc R21,R25
 04D0 0EC0              xjmp L86
 04D2           L85:
 04D2                   .dbline 232
 04D2           ;       else 
 04D2           ;        { tSwitch += (4 * (x - y) + 10);
 04D2                   .dbline 232
 04D2 9601              movw R18,R12
 04D4 2A19              sub R18,R10
 04D6 3B09              sbc R19,R11
 04D8 04E0              ldi R16,4
 04DA 10E0              ldi R17,0
 04DC 0E940000          xcall empy16s
 04E0 C801              movw R24,R16
 04E2 0A96              adiw R24,10
 04E4 480F              add R20,R24
 04E6 591F              adc R21,R25
 04E8                   .dbline 233
 04E8           ;          y--;
 04E8 C501              movw R24,R10
 04EA 0197              sbiw R24,1
 04EC 5C01              movw R10,R24
 04EE                   .dbline 234
 04EE           ;        }
 04EE           L86:
 04EE                   .dbline 235
 04EE C601              movw R24,R12
 04F0 0196              adiw R24,1
 04F2 6C01              movw R12,R24
 04F4                   .dbline 236
 04F4           L83:
 04F4                   .dbline 216
 04F4 AC14              cp R10,R12
 04F6 BD04              cpc R11,R13
 04F8 0CF0              brlt X5
 04FA 7DCF              xjmp L82
 04FC           X5:
 04FC                   .dbline -2
 04FC           L81:
 04FC 2196              adiw R28,1
 04FE 0E940000          xcall pop_gset5
 0502 2496              adiw R28,4
 0504                   .dbline 0 ; func end
 0504 0895              ret
 0506                   .dbsym r tSwitch 20 I
 0506                   .dbsym r d 22 c
 0506                   .dbsym r y 10 I
 0506                   .dbsym r x 12 I
 0506                   .dbsym r mode 14 c
 0506                   .dbsym l radius 15 c
 0506                   .dbsym l yCenter 13 c
 0506                   .dbsym l xCenter 11 c
 0506                   .dbend
 0506                   .dbfunc e lcd_rect _lcd_rect fV
 0506           ;           mode -> R14
 0506           ;         height -> R12
 0506           ;          width -> R22
 0506           ;              y -> R20
 0506           ;              x -> R10
                        .even
 0506           _lcd_rect::
 0506 0E940000          xcall push_gset5
 050A 422F              mov R20,R18
 050C A02E              mov R10,R16
 050E 2597              sbiw R28,5
 0510 6F85              ldd R22,y+15
 0512 C988              ldd R12,y+17
 0514 EB88              ldd R14,y+19
 0516                   .dbline -1
 0516                   .dbline 241
 0516           ;       x++;
 0516           ;     }
 0516           ;  }
 0516           ; 
 0516           ; 
 0516           ; void lcd_rect(uint8_t x, uint8_t y, uint8_t width, uint8_t height, uint8_t mode) 
 0516           ;  { width--;
 0516                   .dbline 241
 0516 6A95              dec R22
 0518                   .dbline 242
 0518           ;    height--;
 0518 CA94              dec R12
 051A                   .dbline 243
 051A           ;    lcd_line(x, y, x+width, y, mode);  // top
 051A EC82              std y+4,R14
 051C 4A83              std y+2,R20
 051E 2A2C              mov R2,R10
 0520 260E              add R2,R22
 0522 2882              std y+0,R2
 0524 242F              mov R18,R20
 0526 0A2D              mov R16,R10
 0528 0CDE              xcall _lcd_line
 052A                   .dbline 244
 052A           ;    lcd_line(x, y, x, y+height, mode); // left
 052A EC82              std y+4,R14
 052C 242E              mov R2,R20
 052E 2C0C              add R2,R12
 0530 2A82              std y+2,R2
 0532 A882              std y+0,R10
 0534 242F              mov R18,R20
 0536 0A2D              mov R16,R10
 0538 04DE              xcall _lcd_line
 053A                   .dbline 245
 053A           ;    lcd_line(x, y+height, x+width, y+height, mode);    // bottom
 053A EC82              std y+4,R14
 053C 242E              mov R2,R20
 053E 2C0C              add R2,R12
 0540 2A82              std y+2,R2
 0542 4A2C              mov R4,R10
 0544 460E              add R4,R22
 0546 4882              std y+0,R4
 0548 222D              mov R18,R2
 054A 0A2D              mov R16,R10
 054C FADD              xcall _lcd_line
 054E                   .dbline 246
 054E           ;    lcd_line(x+width, y, x+width, y+height, mode);             // right
 054E EC82              std y+4,R14
 0550 242E              mov R2,R20
 0552 2C0C              add R2,R12
 0554 2A82              std y+2,R2
 0556 2A2C              mov R2,R10
 0558 260E              add R2,R22
 055A 2882              std y+0,R2
 055C 242F              mov R18,R20
 055E 022D              mov R16,R2
 0560 F0DD              xcall _lcd_line
 0562                   .dbline -2
 0562           L87:
 0562 2596              adiw R28,5
 0564 0E940000          xcall pop_gset5
 0568                   .dbline 0 ; func end
 0568 0895              ret
 056A                   .dbsym r mode 14 c
 056A                   .dbsym r height 12 c
 056A                   .dbsym r width 22 c
 056A                   .dbsym r y 20 c
 056A                   .dbsym r x 10 c
 056A                   .dbend
 056A                   .dbfunc e lcd_box _lcd_box fV
 056A           ;              i -> R20
 056A           ;           mode -> R22
 056A           ;         height -> R10
 056A           ;          width -> R12
 056A           ;              y -> R14
 056A           ;              x -> y+15
                        .even
 056A           _lcd_box::
 056A 0E940000          xcall push_arg4
 056E 0E940000          xcall push_gset5
 0572 E22E              mov R14,R18
 0574 2597              sbiw R28,5
 0576 CB88              ldd R12,y+19
 0578 AD88              ldd R10,y+21
 057A 6F89              ldd R22,y+23
 057C                   .dbline -1
 057C                   .dbline 250
 057C           ;  }
 057C           ; 
 057C           ; void lcd_box( uint8_t x, uint8_t y, uint8_t width,  uint8_t height,  uint8_t mode) 
 057C           ;  { uint8_t i;
 057C                   .dbline 251
 057C           ;    if (!width) return; 
 057C CC20              tst R12
 057E 09F4              brne L89
 0580                   .dbline 251
 0580 10C0              xjmp L88
 0582           L89:
 0582                   .dbline 253
 0582           ; 
 0582           ;    width--;
 0582 CA94              dec R12
 0584                   .dbline 255
 0584           ;       
 0584           ;    for (i=y;i<y+height;i++) 
 0584 4E2D              mov R20,R14
 0586 09C0              xjmp L94
 0588           L91:
 0588                   .dbline 256
 0588 6C83              std y+4,R22
 058A 4A83              std y+2,R20
 058C 2F84              ldd R2,y+15
 058E 2C0C              add R2,R12
 0590 2882              std y+0,R2
 0592 242F              mov R18,R20
 0594 0F85              ldd R16,y+15
 0596 D5DD              xcall _lcd_line
 0598           L92:
 0598                   .dbline 255
 0598 4395              inc R20
 059A           L94:
 059A                   .dbline 255
 059A 2E2C              mov R2,R14
 059C 2A0C              add R2,R10
 059E 4215              cp R20,R2
 05A0 98F3              brlo L91
 05A2                   .dbline -2
 05A2           L88:
 05A2 2596              adiw R28,5
 05A4 0E940000          xcall pop_gset5
 05A8 2496              adiw R28,4
 05AA                   .dbline 0 ; func end
 05AA 0895              ret
 05AC                   .dbsym r i 20 c
 05AC                   .dbsym r mode 22 c
 05AC                   .dbsym r height 10 c
 05AC                   .dbsym r width 12 c
 05AC                   .dbsym r y 14 c
 05AC                   .dbsym l x 15 c
 05AC                   .dbend
